@startuml
'https://plantuml.com/sequence-diagram

interface Board{
    - positions: Position[]
    + isEmpty(Position positions)

}

ChessBoard ..|> Board
ChessBoard o-- Position
class ChessBoard{
    - positions: Position[64]
}

Position *-u- Board
Position o-- Piece
class Position{
    - verticalPosition: String
    - horizontalPosition: Integer
    - piece: Piece
    + isEmpty()
    + getVerticalPosition()
    + getHorizontalPosition()
    + getPiece()
}

Piece --> Color
Piece --> PieceType
class Piece{
    - id: Integer
    - pieceType: PieceType
    - color: Color
    + getId()
    + getType()
    + getColor()
}

enum Color{
    - White
    - Black
}

enum PieceType{
    - King
    - Queen
    - Bishop
    - Knight
    - Rook
    - Pawn
    - Invalid
}


Game *-- Validation
Game *-- Piece
Game *-- Board
class Game{
    - board: Board
    - validation: Validation
    - player1Pieces: List<Piece>
    - player2Pieces: List<Piece>
    - turn: boolean
    + movePiece(piece: Piece, board: Board)
    + promotePawn(pawn: Piece)
    + attackPiece()
}


class Validation{
    -validateMove(turn:Boolean, startingPosition: Position, finalPosition: Position)
}




/'
    --|> herencia
    *-- composición
    o-- agregación
    --> asosiación
    ..> dependencia
    <|.. realización/implementación
'/
@enduml